Starting optimization: m20_j15_d2_mt9_r7.txt
ERROR: LoadError: OutOfMemoryError()
Stacktrace:
 [1] Type at ./boot.jl:402 [inlined]
 [2] Type at ./boot.jl:411 [inlined]
 [3] Type at ./boot.jl:419 [inlined]
 [4] similar at ./abstractarray.jl:618 [inlined]
 [5] similar at ./abstractarray.jl:617 [inlined]
 [6] similar at ./broadcast.jl:196 [inlined]
 [7] copy at ./broadcast.jl:773 [inlined]
 [8] materialize at ./broadcast.jl:753 [inlined]
 [9] macro expansion at /home/iori1/.julia/packages/CPLEX/iAQQk/src/cpx_common.jl:7 [inlined]
 [10] c_api_addrows(::CPLEX.Model, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{Float64,1}, ::Array{Int8,1}, ::Array{Float64,1}) at /home/iori1/.julia/packages/CPLEX/iAQQk/src/cpx_constrs.jl:9
 [11] add_constraints(::CPLEX.Optimizer, ::Array{MathOptInterface.ScalarAffineFunction{Float64},1}, ::Array{MathOptInterface.GreaterThan{Float64},1}) at /home/iori1/.julia/packages/CPLEX/iAQQk/src/MOI/MOI_wrapper.jl:1399
 [12] add_constraints(::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}, ::Array{MathOptInterface.ScalarAffineFunction{Float64},1}, ::Array{MathOptInterface.GreaterThan{Float64},1}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Bridges/bridge_optimizer.jl:1065
 [13] copy_constraints(::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}, ::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, ::MathOptInterface.Utilities.IndexMap, ::Array{MathOptInterface.ConstraintIndex{MathOptInterface.ScalarAffineFunction{Float64},MathOptInterface.GreaterThan{Float64}},1}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/copy.jl:228
 [14] pass_constraints(::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}, ::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, ::Bool, ::MathOptInterface.Utilities.IndexMap, ::Array{DataType,1}, ::Array{Array{T,1} where T,1}, ::Array{DataType,1}, ::Array{Array{T,1} where T,1}, ::typeof(MathOptInterface.Utilities.copy_constraints), ::typeof(MathOptInterface.set)) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/copy.jl:265
 [15] pass_constraints(::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}, ::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, ::Bool, ::MathOptInterface.Utilities.IndexMap, ::Array{DataType,1}, ::Array{Array{T,1} where T,1}, ::Array{DataType,1}, ::Array{Array{T,1} where T,1}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/copy.jl:240
 [16] default_copy_to(::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}, ::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, ::Bool) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/copy.jl:340
 [17] #automatic_copy_to#97 at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/copy.jl:15 [inlined]
 [18] #automatic_copy_to at ./none:0 [inlined]
 [19] #copy_to#3 at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Bridges/bridge_optimizer.jl:254 [inlined]
 [20] (::getfield(MathOptInterface, Symbol("#kw##copy_to")))(::NamedTuple{(:copy_names,),Tuple{Bool}}, ::typeof(MathOptInterface.copy_to), ::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}, ::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}) at ./none:0
 [21] attach_optimizer(::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer,MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/cachingoptimizer.jl:149
 [22] optimize!(::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer,MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/cachingoptimizer.jl:185
 [23] #optimize!#78(::Bool, ::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Model, ::Nothing) at /home/iori1/.julia/packages/JuMP/MsUSY/src/optimizer_interface.jl:141
 [24] optimize! at /home/iori1/.julia/packages/JuMP/MsUSY/src/optimizer_interface.jl:111 [inlined] (repeats 2 times)
 [25] macro expansion at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:267 [inlined]
 [26] macro expansion at ./util.jl:156 [inlined]
 [27] (::getfield(Main, Symbol("##4#6")){String,Model})(::IOStream) at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:266
 [28] #open#310(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##4#6")){String,Model}, ::String) at ./iostream.jl:369
 [29] open at ./iostream.jl:367 [inlined]
 [30] (::getfield(Main, Symbol("##3#5")))(::IOStream) at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:30
 [31] #open#310(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##3#5")), ::String) at ./iostream.jl:369
 [32] open(::Function, ::String) at ./iostream.jl:367
 [33] top-level scope at none:0
 [34] include at ./boot.jl:326 [inlined]
 [35] include_relative(::Module, ::String) at ./loading.jl:1038
 [36] include(::Module, ::String) at ./sysimg.jl:29
 [37] include(::String) at ./client.jl:403
 [38] top-level scope at none:0
in expression starting at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:11
