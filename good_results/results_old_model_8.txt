Starting optimization: m2_j10_d1_mt9_r8.txt
CPXPARAM_TimeLimit                               3600
CPXPARAM_WorkMem                                 1
CPXPARAM_MIP_Display                             1
CPXPARAM_MIP_Interval                            1
Warning:  Non-integral bounds for integer variables rounded.
1 of 1 MIP starts provided solutions.
MIP start 'm1' defined initial solution with objective 602.6602.
Warning:  Non-integral bounds for integer variables rounded.
Tried aggregator 2 times.
MIP Presolve eliminated 1683 rows and 4 columns.
MIP Presolve modified 14896 coefficients.
Aggregator did 40 substitutions.
Reduced MIP has 6330 rows, 3233 columns, and 53732 nonzeros.
Reduced MIP has 1636 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.04 sec. (64.95 ticks)
Probing time = 0.01 sec. (4.72 ticks)
Tried aggregator 1 time.
MIP Presolve modified 9000 coefficients.
Reduced MIP has 6330 rows, 3233 columns, and 53732 nonzeros.
Reduced MIP has 1636 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (26.22 ticks)
Probing time = 0.01 sec. (3.88 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.

Node log . . .
Best integer =   6.026602e+02  Node =       0  Best node =   0.000000e+00
Best integer =   5.885510e+02  Node =       0  Best node =   2.132490e+00
Best integer =   5.821528e+02  Node =       0  Best node =   2.132490e+00
Best integer =   5.821528e+02  Node =       0  Best node =   5.063409e+02
Best integer =   5.774802e+02  Node =       0  Best node =   5.485000e+02
Best integer =   5.767805e+02  Node =       0  Best node =   5.485000e+02
Best integer =   5.766010e+02  Node =      50  Best node =   5.485000e+02
Best integer =   5.762476e+02  Node =      50  Best node =   5.485000e+02
Best integer =   5.761264e+02  Node =      50  Best node =   5.485000e+02
Best integer =   5.761264e+02  Node =    3257  Best node =   5.485000e+02
Best integer =   5.750125e+02  Node =    5977  Best node =   5.485000e+02
Best integer =   5.733504e+02  Node =    5977  Best node =   5.485000e+02
Best integer =   5.711272e+02  Node =    9659  Best node =   5.485000e+02
Best integer =   5.709608e+02  Node =   21495  Best node =   5.485000e+02
Best integer =   5.708679e+02  Node =   21835  Best node =   5.485000e+02
Best integer =   5.707402e+02  Node =   23891  Best node =   5.485000e+02
Best integer =   5.699678e+02  Node =   25433  Best node =   5.485000e+02
Best integer =   5.699270e+02  Node =   36168  Best node =   5.485000e+02
Best integer =   5.698552e+02  Node =   36208  Best node =   5.485000e+02
Best integer =   5.695623e+02  Node =   38075  Best node =   5.485000e+02
Best integer =   5.692607e+02  Node =   38347  Best node =   5.485000e+02
Best integer =   5.688662e+02  Node =   39312  Best node =   5.485000e+02
Best integer =   5.686752e+02  Node =   39450  Best node =   5.485000e+02
Best integer =   5.685623e+02  Node =   39935  Best node =   5.485000e+02
Best integer =   5.681036e+02  Node =   40017  Best node =   5.485000e+02
Best integer =   5.678719e+02  Node =   45289  Best node =   5.485693e+02
Best integer =   5.673885e+02  Node =   45297  Best node =   5.485693e+02
Best integer =   5.670936e+02  Node =   49158  Best node =   5.485853e+02
Best integer =   5.670868e+02  Node =   74083  Best node =   5.486600e+02
Best integer =   5.670330e+02  Node =   74663  Best node =   5.486600e+02
3612.714601 seconds (46.51 M allocations: 2.298 GiB, 0.03% gc time)
TIME_LIMIT
Optimization finished
-------TIME LIMIT REACHED. BEST VALUE FOUND: 566.6559885600515
 
 
 
Starting optimization: m2_j10_d1_mt9_r9.txt
Best integer =   5.669148e+02  Node =  554918  Best node =   5.491758e+02
Best integer =   5.667939e+02  Node =  558911  Best node =   5.491768e+02
Best integer =   5.666560e+02  Node =  562032  Best node =   5.491782e+02
Best integer =   5.666560e+02  Node =  882595  Best node =   5.492814e+02

Implied bound cuts applied:  1348
Mixed integer rounding cuts applied:  899
Zero-half cuts applied:  1
Lift and project cuts applied:  1
CPXPARAM_TimeLimit                               3600
CPXPARAM_WorkMem                                 1
CPXPARAM_MIP_Display                             1
CPXPARAM_MIP_Interval                            1
Warning:  Non-integral bounds for integer variables rounded.
1 of 1 MIP starts provided solutions.
MIP start 'm1' defined initial solution with objective 485.9020.
Warning:  Non-integral bounds for integer variables rounded.
Tried aggregator 2 times.
MIP Presolve eliminated 1683 rows and 4 columns.
MIP Presolve modified 15048 coefficients.
Aggregator did 40 substitutions.
Reduced MIP has 6330 rows, 3233 columns, and 53732 nonzeros.
Reduced MIP has 1636 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.04 sec. (64.88 ticks)
Probing time = 0.02 sec. (4.72 ticks)
Tried aggregator 1 time.
MIP Presolve modified 9000 coefficients.
Reduced MIP has 6330 rows, 3233 columns, and 53732 nonzeros.
Reduced MIP has 1636 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.02 sec. (26.20 ticks)
Probing time = 0.01 sec. (3.88 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.

Node log . . .
Best integer =   4.859020e+02  Node =       0  Best node =   0.000000e+00
Best integer =   4.859020e+02  Node =       0  Best node =   8.352434e+00
Best integer =   4.852594e+02  Node =       0  Best node =   4.740000e+02
Best integer =   4.844488e+02  Node =      10  Best node =   4.740000e+02
Best integer =   4.844488e+02  Node =    3260  Best node =   4.740000e+02
Best integer =   4.844488e+02  Node =    3283  Best node =   4.740000e+02
Best integer =   4.834000e+02  Node =    6018  Best node =   4.740000e+02
Best integer =   4.833702e+02  Node =   14294  Best node =   4.740000e+02
Best integer =   4.832063e+02  Node =   14805  Best node =   4.740000e+02
Best integer =   4.831780e+02  Node =   14921  Best node =   4.740000e+02
Best integer =   4.809192e+02  Node =   14923  Best node =   4.740000e+02
Best integer =   4.807626e+02  Node =   16182  Best node =   4.740000e+02
Best integer =   4.805136e+02  Node =   16220  Best node =   4.740000e+02
Best integer =   4.803912e+02  Node =   18504  Best node =   4.740000e+02
Best integer =   4.803812e+02  Node =   34991  Best node =   4.740182e+02
Best integer =   4.803449e+02  Node =   34995  Best node =   4.740182e+02
Best integer =   4.802944e+02  Node =   35123  Best node =   4.740182e+02
Best integer =   4.802352e+02  Node =   38925  Best node =   4.740182e+02
Best integer =   4.801140e+02  Node =   54527  Best node =   4.740371e+02
Best integer =   4.801140e+02  Node =  669574  Best node =   4.743384e+02

There may be further error information in the clone logs.

Implied bound cuts applied:  1363
Mixed integer rounding cuts applied:  1018
Zero-half cuts applied:  1
Warning: MIP starts not constructed because of out-of-memory status.

Consider using CPLEX node files to reduce memory usage.
CPLEX Error  1001: Out of memory.
ERROR: LoadError: CPLEX.CplexError(1001, "CPLEX Error  1001: Out of memory.\n")
Stacktrace:
 [1] optimize! at /home/iori1/.julia/packages/CPLEX/iAQQk/src/cpx_solve.jl:23 [inlined]
 [2] optimize!(::CPLEX.Optimizer) at /home/iori1/.julia/packages/CPLEX/iAQQk/src/MOI/MOI_wrapper.jl:1838
 [3] optimize!(::MathOptInterface.Bridges.LazyBridgeOptimizer{CPLEX.Optimizer}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Bridges/bridge_optimizer.jl:225
 [4] optimize!(::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer,MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}) at /home/iori1/.julia/packages/MathOptInterface/A2UPd/src/Utilities/cachingoptimizer.jl:189
 [5] #optimize!#78(::Bool, ::Bool, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Model, ::Nothing) at /home/iori1/.julia/packages/JuMP/MsUSY/src/optimizer_interface.jl:141
 [6] optimize! at /home/iori1/.julia/packages/JuMP/MsUSY/src/optimizer_interface.jl:111 [inlined] (repeats 2 times)
 [7] macro expansion at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:267 [inlined]
 [8] macro expansion at ./util.jl:156 [inlined]
 [9] (::getfield(Main, Symbol("##4#6")){String,Model})(::IOStream) at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:266
 [10] #open#310(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##4#6")){String,Model}, ::String) at ./iostream.jl:369
 [11] open at ./iostream.jl:367 [inlined]
 [12] (::getfield(Main, Symbol("##3#5")))(::IOStream) at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:30
 [13] #open#310(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::getfield(Main, Symbol("##3#5")), ::String) at ./iostream.jl:369
 [14] open(::Function, ::String) at ./iostream.jl:367
 [15] top-level scope at none:0
 [16] include at ./boot.jl:326 [inlined]
 [17] include_relative(::Module, ::String) at ./loading.jl:1038
 [18] include(::Module, ::String) at ./sysimg.jl:29
 [19] include(::String) at ./client.jl:403
 [20] top-level scope at none:0
in expression starting at /home/iori1/Scrivania/scheduling-with-deterioration-sbpo/scheduling.jl:11
